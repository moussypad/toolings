AWSTemplateFormatVersion: 2010-09-09
Description: "Default service roles for AWS CodePipeline"
Parameters:
  DomainName:
    Description: "e.g. example.com"
    Type: String
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<![.-])
    ConstraintDescription: "Must be a valid domain name"
Resources:
  CodePipelineDefaultTrustRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service: 
                - "codepipeline.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      RoleName: !Sub
        - "${tmp}-codepipeline-default-role"
        - { tmp: !Select [0, !Split [".", !Ref DomainName]] }
  CodePipelineDefaultPolicy: 
    Type: AWS::IAM::ManagedPolicy
    Properties: 
      Description: "Default policy for AWS CodePipeline Service"
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Action:
              - "s3:GetObject"
              - "s3:GetObjectVersion"
              - "s3:GetBucketVersioning"
            Resource: "*"
          - 
            Effect: Allow
            Action:
              - "s3:PutObject"
            Resource: !Sub
              - "arn:aws:s3:::${tmp}-codepipeline-artifacts*"
              - { tmp: !Select [0, !Split [".", !Ref DomainName]] }
              # - "arn:aws:s3:::elasticbeanstalk*"
          # - 
          #   Effect: Allow
          #   Action:
          #     - "codecommit:CancelUploadArchive"
          #     - "codecommit:GetBranch"
          #     - "codecommit:GetCommit"
          #     - "codecommit:GetUploadArchiveStatus"
          #     - "codecommit:UploadArchive"
          #   Resource: "*"
          # - 
          #   Effect: Allow
          #   Action:
          #     - "codedeploy:CreateDeployment"
          #     - "codedeploy:GetApplicationRevision"
          #     - "codedeploy:GetDeployment"
          #     - "codedeploy:GetDeploymentConfig"
          #     - "codedeploy:RegisterApplicationRevision"
          #   Resource: "*"
          # - 
          #   Effect: Allow
          #   Action:
          #     - "elasticbeanstalk:*"
          #     - "ec2:*"
          #     - "elasticloadbalancing:*"
          #     - "autoscaling:*"
          #     - "cloudwatch:*"
          #     - "s3:*"
          #     - "sns:*"
          #     - "cloudformation:*"
          #     - "rds:*"
          #     - "sqs:*"
          #     - "ecs:*"
          #     - "iam:PassRole"
          #   Resource: "*"
          # - 
          #   Effect: Allow
          #   Action:
          #     - "lambda:InvokeFunction"
          #     - "lambda:ListFunctions"
          #   Resource: "*"
          # - 
          #   Effect: Allow
          #   Action:
          #     - "opsworks:CreateDeployment"
          #     - "opsworks:DescribeApps"
          #     - "opsworks:DescribeCommands"
          #     - "opsworks:DescribeDeployments"
          #     - "opsworks:DescribeInstances"
          #     - "opsworks:DescribeStacks"
          #     - "opsworks:UpdateApp"
          #     - "opsworks:UpdateStack"
          #   Resource: "*"     
          - 
            Effect: Allow
            Action:
              - "cloudformation:CreateStack"
              - "cloudformation:DeleteStack"
              - "cloudformation:DescribeStacks"
              - "cloudformation:UpdateStack"
              - "cloudformation:CreateChangeSet"
              - "cloudformation:DeleteChangeSet"
              - "cloudformation:DescribeChangeSet"
              - "cloudformation:ExecuteChangeSet"
              - "cloudformation:SetStackPolicy"
              - "cloudformation:ValidateTemplate"
              - "iam:PassRole"
            Resource: "*"
          - 
            Effect: Allow
            Action:
              - "codebuild:BatchGetBuilds"
              - "codebuild:StartBuild"
            Resource: "*"
      Roles: 
        - !Ref CodePipelineDefaultTrustRole  
  CodeBuildDefaultTrustRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service: 
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      RoleName: !Sub
        - "${tmp}-codebuild-default-role"
        - { tmp: !Select [0, !Split [".", !Ref DomainName]] }
  CodeBuildDefaultPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Default policy for AWS CodeBuild Service
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Action: 
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "*"
          - 
            Effect: Allow
            Action: "s3:*"
            Resource: "*"
          - 
            Effect: Allow
            Action: "CloudFormation:ValidateTemplate"
            Resource: "*"
          - 
            Effect: Allow
            Action: 
              - "kms:GenerateDataKey*"
              - "kms:Encrypt"
              - "kms:Decrypt"
            Resource: ["*"]
          - 
            Effect: Allow
            Action: "sns:SendMessage"
            Resource: "*"
      Roles: 
        - !Ref CodeBuildDefaultTrustRole
  CloudFormationDefaultTrustRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service: 
                - "cloudformation.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      RoleName: !Sub 
        - "${tmp}-cloudformation-role"
        - { tmp: !Select [0, !Split [".", !Ref DomainName]] }
  CloudFormationDefaultPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Default policy for AWS Cloudformation Service
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Action: "*"
            Resource: "*"
          # - 
          #   Effect: Allow
          #   Action: 
          #     - "s3:GetObject"
          #     - "s3:GetObjectVersion"
          #     - "s3:GetBucketVersioning"
          #   Resource: "*"
          # - 
          #   Effect: Allow
          #   Action: "s3:PutObject"
          #   Resource: "arn:aws:s3:::codepipeline*"
          # - 
          #   Effect: Allow
          #   Action: "lambda:*"
          #   Resource: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*"
          # - 
          #   Effect: Allow
          #   Action: "apigateway:*"
          #   Resource: !Sub "arn:aws:apigateway:${AWS::Region}::*"
          # - 
          #   Effect: Allow
          #   Action: 
          #     - "iam:GetRole"
          #     - "iam:CreateRole"
          #     - "iam:DeleteRole"
          #   Resource: !Sub 
          #     - "arn:aws:iam::${AWS::AccountId}:role/${tmp}-*"
          #     - { tmp: !Select [0, !Split [".", !Ref DomainName]] }
          # - 
          #   Effect: Allow
          #   Action: 
          #     - "iam:AttachRolePolicy"
          #     - "iam:DetachRolePolicy"
          #   Resource: !Sub
          #     - "arn:aws:iam::${AWS::AccountId}:role/${tmp}-*"
          #     - { tmp: !Select [0, !Split [".", !Ref DomainName]] }
          # - 
          #   Effect: Allow
          #   Action: "iam:PassRole"
          #   Resource: "*"
          # - 
          #   Effect: Allow
          #   Action: "cloudformation:CreateChangeSet"
          #   Resource: !Sub "arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31"
      Roles: 
        - !Ref CloudFormationDefaultTrustRole   

Outputs:
  CodePipelineDefaultRoleArn:
    Value: !GetAtt CodePipelineDefaultTrustRole.Arn
  CodeBuildDefaultRoleArn:
    Value: !GetAtt CodeBuildDefaultTrustRole.Arn
  CloudFormationDefaultRoleArn:
    Value: !GetAtt CloudFormationDefaultTrustRole.Arn